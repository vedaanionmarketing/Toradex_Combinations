import csv
from itertools import product
static_data = {
    "Product Name":"Verdin iMX8M Plus",
    "Product Type":"Module",
    "Processor Manufacturer":"NXP",
    "Processor Family":"Verdin",
    "Processor Sub Family":"Not found",
    "Name of Processor Core":"Arm Cortex-A53",
    "Number of Processor Cores":"4",
    "Processor Clock Speed":"1.6 GHz",
    "Name of Microcontroller Core":"Arm Cortex-M7F",
    "Microcontroller Clock Speed":"800 MHz",
    "On-Board MCU":"Yes",
    "On-Board DSP":"Not found",
    "On-Board Graphics Engine":"Yes",
    "Ethernet":"Gigabit with TSN (+2nd RGMII)",
    "Cellular":"Not found",
    "GNSS":"Not found",
    "USB Technology":"USB 3.1 Gen 1, USB 2.0 OTG",
    "PCI-e":"1x PCI-e Gen 3",
    "LVDS":"1x",
    "UART":"4x",
    "I2C":"5x",
    "I3C":"Not found",
    "SPI":"3x",
    "CAN 2.0B":"2x CAN FD",
    "GPIO":"95x",
    "SD/MMC":"1x",
    "SDIO":"1x",
    "PoE":"Not found",
    "RS232":"Not found",
    "RS485 / RS232":"Not found",
    "Audio_Digital Audio":"6x SAI: I2S or AC95",
    "Audio_I2S":"6x SAI: I2S or AC95",
    "Audio_SPDIF":"Not found",
    "Audio_Digital Mic":"Not found",
    "Camera Interface_MIPI-CSI 2 Lane":"2x Quad Lane",
    "Camera Interface_GigE Vision":"Not found",
    "Camera Interface_CoaXPress":"Not found",
    "Display Interface_LVDS":"up to 1920x1080",
    "Display Interface_DVI-D":"Not found",
    "Display Interface_2-lane MIPI DSI":"No, 1x Quad Lane MIPI DSI",
    "Display Interface_4-lane MIPI DSI":"No, 1x Quad Lane MIPI DSI",
    "Display Interface_Touch screen":"Not found",
    "Display Interface_Parallel RGB":"Not found",
    "Display Interface_eDP":"Not found",
    "Display Interface_HDMI":"1x: 2.0a, up to 4K",
    "Formfactor":"Modern System on Module type",
    "Dimensions_Width":"6.0 mm",
    "Dimensions_Length":"69.6 mm",
    "Dimensions_Height":"35.0 mm",
    "Connector to Carrier Board":"Could connect to carrier boards - optional",
    "Operating System":"Embedded Linux, FreeRTOS, Android, QNX",
    "Other_Interface_PWM":"4x",
    "Other_Interface_JTAG":"1x",
    "Other_Interface_ADC":"Yes",
    "Other_Interface_Digital IOs":"Not found",
    "Other_Interface_2x 12-bit DAC":"Not found",
    "Other_Interface_Timers":"Not found",
    "Other_Interface_SATA":"Not found",
    "Other_Interface_Additional Expansion Connectors":"Not found",
    "Accessories":"Yes Verdin Industrial Heatsink, Capacitive Touch Display 10.1' LVDS, ect.",
    "Video Encode":"Yes",	
    "Video Decode":"Yes",	
    "Country of Origin":"United States"
}
#Dynamic Data   
                  
onboardnpu = ["Yes", "No"]
onboardvpu = ["Yes", "No"]
threedgpu = ["Yes", "No"]
isp = ["Yes", "No"]
memory = ["1GB RAM", "2GB RAM", "4GB RAM", "8GB RAM"]
flash = ["8GB FLASH", "16GB FLASH", "32GB FLASH", "64GB FLASH", "128GB FLASH"]
wifiandbluetooth = ["Yes", "No"]
temperature = ["-40C to 85C", "-25C to 85C", "0C to 70C"]
volumequantity = ["1000", "3000", "6000", "10000", "50000", "100000", "200000"]
combinations = list(product(onboardnpu, onboardvpu, threedgpu, isp, memory, flash, wifiandbluetooth, temperature, volumequantity))
with open("Verdin_iMX8Mplus.csv", "w", newline="") as file:
    csvwriter = csv.writer(file)
    csvwriter.writerow(["Product Name","Product Type","Processor Manufacturer","Processor Family","Processor Sub Family","On Board NPU","On Board VPU","3D GPU","ISP","Memory","Flash","WiFi and Bluetooth","Temperature","Min Temp","Max Temp","Wireless Network - Wi-Fi","Bluetooth Newtwork","Volume Quantity","Name of Processor Core","Number of Processor Cores","Processor Clock Speed","Name of Microcontroller Core","Microcontroller Clock Speed","On-Board MCU","On-Board DSP","On-Board Graphics Engine","Ethernet","Cellular","GNSS","USB Technology","PCI-e","LVDS","UART","I2C","I3C","SPI","CAN 2.0B","GPIO","SD/MMC","SDIO","PoE","RS232","RS485 / RS232","Audio_Digital Audio","Audio_I2S","Audio_SPDIF","Audio_Digital Mic","Camera Interface_MIPI-CSI 2 Lane","Camera Interface_GigE Vision","Camera Interface_CoaXPress","Display Interface_LVDS","Display Interface_DVI-D","Display Interface_2-lane MIPI DSI","Display Interface_4-lane MIPI DSI","Display Interface_Touch screen","Display Interface_Parallel RGB","Display Interface_eDP","Display Interface_HDMI","Formfactor","Dimensions_Width","Dimensions_Length","Dimensions_Height","Connector to Carrier Board","Other_Interface_PWM","Other_Interface_JTAG","Other_Interface_ADC","Other_Interface_Digital IOs","Other_Interface_2x 12-bit DAC","Other_Interface_Timers","Other_Interface_SATA","Other_Interface_Additional Expansion Connectors","Accessories","Video Encode","Video Decode","Country of Origin"])
    for combination in combinations:
        csvwriter.writerow(
            [static_data["Product Name"],
            static_data["Product Type"],
            static_data["Processor Manufacturer"],
            static_data["Processor Family"],
            static_data["Processor Sub Family"],
            onboardnpu[onboardnpu.index(combination[0])] if combination[0] in onboardnpu else "Not found",
            onboardvpu[onboardnpu.index(combination[1])] if combination[1] in onboardnpu else "Not found",
            threedgpu[threedgpu.index(combination[2])] if combination[2] in threedgpu else "Not found",
            isp[isp.index(combination[3])] if combination[3] in isp else "Not found",
            memory[memory.index(combination[4])] if combination[4] in memory else "Not found",
            flash[flash.index(combination[5])] if combination[5] in flash else "Not found",
            wifiandbluetooth[wifiandbluetooth.index(combination[6])] if combination[6] in wifiandbluetooth else "Not found",
            temperature[temperature.index(combination[7])] if combination [7] in temperature else "Not found",
            "-40C" if temperature[temperature.index(combination[7])] == "-40C to 85C" else "-25C" if temperature[temperature.index(combination[7])] == "-25C to 85C" else "0C",
            "85C" if temperature[temperature.index(combination[7])] == "-40C to 85C" or "-25C to 85C" else "70C",
            "5 (802.11ac)" if wifiandbluetooth[wifiandbluetooth.index(combination[6])] == "Yes" else "Not found",
            "Bluetooth v5.3" if wifiandbluetooth[wifiandbluetooth.index(combination[6])] == "Yes" else "Not found",
            volumequantity[volumequantity.index(combination[8])] if combination[8] in volumequantity else "Not found",
            static_data["Name of Processor Core"],
            static_data["Number of Processor Cores"],
            static_data["Processor Clock Speed"],
            static_data["Name of Microcontroller Core"],
            static_data["Microcontroller Clock Speed"],
            static_data["On-Board MCU"],
            static_data["On-Board DSP"],
            static_data["On-Board Graphics Engine"],
            static_data["Ethernet"],
            static_data["Cellular"],
            static_data["GNSS"],
            static_data["USB Technology"],
            static_data["PCI-e"],
            static_data["LVDS"],
            static_data["UART"],
            static_data["I2C"],
            static_data["I3C"],
            static_data["SPI"],
            static_data["CAN 2.0B"],
            static_data["GPIO"],
            static_data["SD/MMC"],
            static_data["SDIO"],
            static_data["PoE"],
            static_data["RS232"],
            static_data["RS485 / RS232"],
            static_data["Audio_Digital Audio"],
            static_data["Audio_I2S"],
            static_data["Audio_SPDIF"],
            static_data["Audio_Digital Mic"],
            static_data["Camera Interface_MIPI-CSI 2 Lane"],
            static_data["Camera Interface_GigE Vision"],
            static_data["Camera Interface_CoaXPress"],
            static_data["Display Interface_LVDS"],
            static_data["Display Interface_DVI-D"],
            static_data["Display Interface_2-lane MIPI DSI"],
            static_data["Display Interface_4-lane MIPI DSI"],
            static_data["Display Interface_Touch screen"],
            static_data["Display Interface_Parallel RGB"],
            static_data["Display Interface_eDP"],
            static_data["Display Interface_HDMI"],
            static_data["Formfactor"],
            static_data["Dimensions_Width"],
            static_data["Dimensions_Length"],
            static_data["Dimensions_Height"],
            static_data["Connector to Carrier Board"],
            static_data["Operating System"],
            static_data["Other_Interface_PWM"],
            static_data["Other_Interface_JTAG"],
            static_data["Other_Interface_ADC"],
            static_data["Other_Interface_Digital IOs"],
            static_data["Other_Interface_2x 12-bit DAC"],
            static_data["Other_Interface_Timers"],
            static_data["Other_Interface_SATA"],
            static_data["Other_Interface_Additional Expansion Connectors"],
            static_data["Accessories"],
            static_data["Video Encode"],	
            static_data["Video Decode"],	
            static_data["Country of Origin"]])
